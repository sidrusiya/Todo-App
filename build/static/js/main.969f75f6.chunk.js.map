{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Todo","props","className","List","ListItem","ListItemText","primary","todo","secondary","Button","onClick","event","collection","doc","id","delete","App","useState","todos","setTodos","input","setInput","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","task","FormControl","InputLabel","Input","value","onChange","target","disabled","type","preventDefault","add","timestamp","FieldValue","serverTimestamp","variant","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAceA,EAZKC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGMC,YCKRC,MAbf,SAAcC,GACV,OACI,qBAAKC,UAAU,aAAf,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAcC,QAASL,EAAMM,KAAKA,KAAMC,UAAU,wBAEtD,cAACC,EAAA,EAAD,CAAQC,QAAS,SAAAC,GAAK,OAAItB,EAAGuB,WAAW,SAASC,IAAIZ,EAAMM,KAAKO,IAAIC,UAApE,6BCmCDC,MAvCf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KAkBb,OAdAC,qBAAU,WACRjC,EAAGuB,WAAW,SAASW,QAAQ,YAAY,QAAQC,YAAW,SAAAC,GAC5DN,EAASM,EAASC,KAAKC,KAAI,SAAAd,GAAG,MAAK,CAACC,GAAGD,EAAIC,GAAIP,KAAKM,EAAIe,OAAOC,eAEhE,CAACT,IAWF,sBAAKlB,UAAU,MAAf,UACE,iDACA,iCACA,eAAC4B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,2BACA,cAACC,EAAA,EAAD,CAAOC,MAAOb,EAAOc,SAAU,SAAAvB,GAAK,OAAIU,EAASV,EAAMwB,OAAOF,aAEhE,cAACxB,EAAA,EAAD,CAAQ2B,UAAWhB,EAAOiB,KAAK,SAAS3B,QAhB5B,SAACC,GACbA,EAAM2B,iBACNjD,EAAGuB,WAAW,SAAS2B,IAAI,CACxBV,KAAMT,EACNoB,UAAWlD,IAASS,UAAU0C,WAAWC,oBAE5CrB,EAAS,KAUiDsB,QAAQ,YAAYC,MAAM,UAApF,yBAIA,6BACG1B,EAAMS,KAAI,SAAApB,GAAI,OACb,cAAC,EAAD,CAAMA,KAAOA,aC3BRsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.969f75f6.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyBKsvPqBJw6DH4LuTRppkL44WyBLdu6eso\",\r\n  authDomain: \"todo-app-913a8.firebaseapp.com\",\r\n  projectId: \"todo-app-913a8\",\r\n  storageBucket: \"todo-app-913a8.appspot.com\",\r\n  messagingSenderId: \"595703763627\",\r\n  appId: \"1:595703763627:web:e799484b9b88c518f8ddee\",\r\n  measurementId: \"G-7T2LGVDE6P\"\r\n}); \r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;","import {Button, List, ListItem, ListItemText } from '@material-ui/core'\r\nimport React from 'react';\r\nimport db from './firebase';\r\n\r\nfunction Todo(props) {\r\n    return (\r\n        <div className=\"todo__list\">\r\n            <List>\r\n                <ListItem>\r\n                    <ListItemText primary={props.todo.todo} secondary=\"Deadline of 1 day\" />\r\n                </ListItem>\r\n                <Button onClick={event => db.collection('todos').doc(props.todo.id).delete()}>Delete Me</Button>\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import './App.css';\nimport React ,{useEffect, useState} from 'react';\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\nimport Todo from './Todo';\nimport db from './firebase';\nimport firebase from 'firebase';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState('');\n\n  useEffect(() => {\n    db.collection('todos').orderBy('timestamp','desc').onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => ({id:doc.id, todo:doc.data().task})));\n    })\n  }, [input]);\n\n  const addTodo = (event) => {\n      event.preventDefault();\n      db.collection('todos').add({\n         task: input,\n         timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      })\n      setInput('');\n  }\n  return (\n    <div className=\"App\">\n      <h1>Hello Sid fans!</h1>\n      <form>\n      <FormControl>\n        <InputLabel >Write a Todo</InputLabel>\n        <Input value={input} onChange={event => setInput(event.target.value)}/>\n      </FormControl>\n      <Button disabled={!input} type=\"submit\" onClick={addTodo} variant=\"contained\" color=\"primary\">\n         Add Todo\n      </Button>\n      </form>\n      <ul>\n        {todos.map(todo => (\n          <Todo todo= {todo} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}